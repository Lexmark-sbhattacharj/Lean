//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LeanData
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CPSEntities : DbContext
    {
        public CPSEntities()
            : base("name=CPSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<DomainName> DomainNames { get; set; }
        public DbSet<LeanApp> LeanApps { get; set; }
    
        public virtual int ADD_LHW_TABLES_FROM_HW(string lEAN_APP)
        {
            var lEAN_APPParameter = lEAN_APP != null ?
                new ObjectParameter("LEAN_APP", lEAN_APP) :
                new ObjectParameter("LEAN_APP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_LHW_TABLES_FROM_HW", lEAN_APPParameter);
        }
    
        public virtual int Create_BulkAM_Catalog(string bulk, string aM, string idLocalization, string lean_App)
        {
            var bulkParameter = bulk != null ?
                new ObjectParameter("Bulk", bulk) :
                new ObjectParameter("Bulk", typeof(string));
    
            var aMParameter = aM != null ?
                new ObjectParameter("AM", aM) :
                new ObjectParameter("AM", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Create_BulkAM_Catalog", bulkParameter, aMParameter, idLocalizationParameter, lean_AppParameter);
        }
    
        public virtual int CREATE_LINE(string line, Nullable<int> capability, string planner, string lean_App)
        {
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var capabilityParameter = capability.HasValue ?
                new ObjectParameter("Capability", capability) :
                new ObjectParameter("Capability", typeof(int));
    
            var plannerParameter = planner != null ?
                new ObjectParameter("Planner", planner) :
                new ObjectParameter("Planner", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_LINE", lineParameter, capabilityParameter, plannerParameter, lean_AppParameter);
        }
    
        public virtual int CREATE_Overproduce_Special_Permission(string idMaterial, string localization_Name, string uploadUser, Nullable<bool> active, string lean_App)
        {
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var localization_NameParameter = localization_Name != null ?
                new ObjectParameter("Localization_Name", localization_Name) :
                new ObjectParameter("Localization_Name", typeof(string));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("uploadUser", uploadUser) :
                new ObjectParameter("uploadUser", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_Overproduce_Special_Permission", idMaterialParameter, localization_NameParameter, uploadUserParameter, activeParameter, lean_AppParameter);
        }
    
        public virtual int CREATE_SPECIAL_BIDS(string idLocalization, string idMaterial, Nullable<int> quantity, string uploadUser, string comments, string lean_App)
        {
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("uploadUser", uploadUser) :
                new ObjectParameter("uploadUser", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_SPECIAL_BIDS", idLocalizationParameter, idMaterialParameter, quantityParameter, uploadUserParameter, commentsParameter, lean_AppParameter);
        }
    
        public virtual int Delete_BulkAM_Catalog(string lean_App, string original_Bulk)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var original_BulkParameter = original_Bulk != null ?
                new ObjectParameter("original_Bulk", original_Bulk) :
                new ObjectParameter("original_Bulk", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delete_BulkAM_Catalog", lean_AppParameter, original_BulkParameter);
        }
    
        public virtual int DELETE_DAILY_UPLOADS_CHECKLIST(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_DAILY_UPLOADS_CHECKLIST", lean_AppParameter);
        }
    
        public virtual int DELETE_DEMAND_BACKORDER(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_DEMAND_BACKORDER", lean_AppParameter);
        }
    
        public virtual int DELETE_DEMAND_CUSTOMER_BACKORDER(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_DEMAND_CUSTOMER_BACKORDER", lean_AppParameter);
        }
    
        public virtual int DELETE_DEMAND_SWE(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_DEMAND_SWE", lean_AppParameter);
        }
    
        public virtual int DELETE_DISTRIBUTION_EXCEP(string lean_app)
        {
            var lean_appParameter = lean_app != null ?
                new ObjectParameter("Lean_app", lean_app) :
                new ObjectParameter("Lean_app", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_DISTRIBUTION_EXCEP", lean_appParameter);
        }
    
        public virtual int DELETE_DISTRIBUTION_NETWORK(string lean_app)
        {
            var lean_appParameter = lean_app != null ?
                new ObjectParameter("Lean_app", lean_app) :
                new ObjectParameter("Lean_app", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_DISTRIBUTION_NETWORK", lean_appParameter);
        }
    
        public virtual int DELETE_INVENTORY_DISTRIBUTION_CENTERS(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_INVENTORY_DISTRIBUTION_CENTERS", lean_AppParameter);
        }
    
        public virtual int DELETE_INVENTORY_DOCKAREA(string lean_app)
        {
            var lean_appParameter = lean_app != null ?
                new ObjectParameter("Lean_app", lean_app) :
                new ObjectParameter("Lean_app", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_INVENTORY_DOCKAREA", lean_appParameter);
        }
    
        public virtual int DELETE_INVENTORY_INTRANSIT(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_INVENTORY_INTRANSIT", lean_AppParameter);
        }
    
        public virtual int DELETE_INVENTORY_INTRANSIT_JABIL(string lean_app)
        {
            var lean_appParameter = lean_app != null ?
                new ObjectParameter("Lean_app", lean_app) :
                new ObjectParameter("Lean_app", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_INVENTORY_INTRANSIT_JABIL", lean_appParameter);
        }
    
        public virtual int DELETE_INVENTORY_REBALANCING(string lean_app)
        {
            var lean_appParameter = lean_app != null ?
                new ObjectParameter("Lean_app", lean_app) :
                new ObjectParameter("Lean_app", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_INVENTORY_REBALANCING", lean_appParameter);
        }
    
        public virtual int DELETE_LINE(Nullable<int> original_idLine, string lean_App)
        {
            var original_idLineParameter = original_idLine.HasValue ?
                new ObjectParameter("original_idLine", original_idLine) :
                new ObjectParameter("original_idLine", typeof(int));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_LINE", original_idLineParameter, lean_AppParameter);
        }
    
        public virtual int DELETE_Overproduce_Special_Permission(Nullable<int> original_idOverproduce, string lean_App)
        {
            var original_idOverproduceParameter = original_idOverproduce.HasValue ?
                new ObjectParameter("original_idOverproduce", original_idOverproduce) :
                new ObjectParameter("original_idOverproduce", typeof(int));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_Overproduce_Special_Permission", original_idOverproduceParameter, lean_AppParameter);
        }
    
        public virtual int DELETE_PARTNUMBER_WEEKDEMAND(Nullable<int> intWeek, Nullable<int> intYear, string lean_app)
        {
            var intWeekParameter = intWeek.HasValue ?
                new ObjectParameter("intWeek", intWeek) :
                new ObjectParameter("intWeek", typeof(int));
    
            var intYearParameter = intYear.HasValue ?
                new ObjectParameter("intYear", intYear) :
                new ObjectParameter("intYear", typeof(int));
    
            var lean_appParameter = lean_app != null ?
                new ObjectParameter("Lean_app", lean_app) :
                new ObjectParameter("Lean_app", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_PARTNUMBER_WEEKDEMAND", intWeekParameter, intYearParameter, lean_appParameter);
        }
    
        public virtual int DELETE_SPECIAL_BIDS(Nullable<int> original_idSpecialBid)
        {
            var original_idSpecialBidParameter = original_idSpecialBid.HasValue ?
                new ObjectParameter("original_idSpecialBid", original_idSpecialBid) :
                new ObjectParameter("original_idSpecialBid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_SPECIAL_BIDS", original_idSpecialBidParameter);
        }
    
        public virtual int DELETE_VIRTUALKANBAN_PROD_PRIORITIZE(string idLocalizationMaterial, Nullable<System.DateTime> txtFechaCaptura, string leanApp)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var txtFechaCapturaParameter = txtFechaCaptura.HasValue ?
                new ObjectParameter("txtFechaCaptura", txtFechaCaptura) :
                new ObjectParameter("txtFechaCaptura", typeof(System.DateTime));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_VIRTUALKANBAN_PROD_PRIORITIZE", idLocalizationMaterialParameter, txtFechaCapturaParameter, leanAppParameter);
        }
    
        public virtual int DELETE_VIRTUALKANBAN_SIGNALDELAY(Nullable<int> idVKB)
        {
            var idVKBParameter = idVKB.HasValue ?
                new ObjectParameter("idVKB", idVKB) :
                new ObjectParameter("idVKB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_VIRTUALKANBAN_SIGNALDELAY", idVKBParameter);
        }
    
        public virtual int DELETE_VIRTUALKANBAN_VKBDETAILPARTNO(Nullable<int> idVKB)
        {
            var idVKBParameter = idVKB.HasValue ?
                new ObjectParameter("idVKB", idVKB) :
                new ObjectParameter("idVKB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_VIRTUALKANBAN_VKBDETAILPARTNO", idVKBParameter);
        }
    
        public virtual int DELETE_VKBINPUT(string lean_app)
        {
            var lean_appParameter = lean_app != null ?
                new ObjectParameter("Lean_app", lean_app) :
                new ObjectParameter("Lean_app", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_VKBINPUT", lean_appParameter);
        }
    
        public virtual int GET_ALL_MISMATCH_LHW_TABLES_FROM_HW(string lEAN_APP)
        {
            var lEAN_APPParameter = lEAN_APP != null ?
                new ObjectParameter("LEAN_APP", lEAN_APP) :
                new ObjectParameter("LEAN_APP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_ALL_MISMATCH_LHW_TABLES_FROM_HW", lEAN_APPParameter);
        }
    
        public virtual ObjectResult<GET_BulkAM_Catalog_Result> GET_BulkAM_Catalog(string lean_App, string filter)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_BulkAM_Catalog_Result>("GET_BulkAM_Catalog", lean_AppParameter, filterParameter);
        }
    
        public virtual ObjectResult<GET_COUNT_SPLIT_Result> GET_COUNT_SPLIT(Nullable<int> idLine, Nullable<System.DateTime> date, string idLocalizationMaterial, string lean_App)
        {
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_COUNT_SPLIT_Result>("GET_COUNT_SPLIT", idLineParameter, dateParameter, idLocalizationMaterialParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_DAILY_UPLOADS_CHECKLIST_Result> GET_DAILY_UPLOADS_CHECKLIST(string lean_App, Nullable<System.DateTime> date)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_DAILY_UPLOADS_CHECKLIST_Result>("GET_DAILY_UPLOADS_CHECKLIST", lean_AppParameter, dateParameter);
        }
    
        public virtual ObjectResult<GET_DEMAND_FOR_BACKORDER_Result> GET_DEMAND_FOR_BACKORDER(string lean_App, string idLocalization_Dest, Nullable<int> leadTime)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var idLocalization_DestParameter = idLocalization_Dest != null ?
                new ObjectParameter("idLocalization_Dest", idLocalization_Dest) :
                new ObjectParameter("idLocalization_Dest", typeof(string));
    
            var leadTimeParameter = leadTime.HasValue ?
                new ObjectParameter("LeadTime", leadTime) :
                new ObjectParameter("LeadTime", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_DEMAND_FOR_BACKORDER_Result>("GET_DEMAND_FOR_BACKORDER", lean_AppParameter, idLocalization_DestParameter, leadTimeParameter);
        }
    
        public virtual ObjectResult<string> GET_IDMATERIAL_VKBINPUT(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_IDMATERIAL_VKBINPUT", lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_INVENTDOCKAREA_BULKAMCAT_Result> GET_INVENTDOCKAREA_BULKAMCAT(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_INVENTDOCKAREA_BULKAMCAT_Result>("GET_INVENTDOCKAREA_BULKAMCAT", lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_LINE_Result> GET_LINE(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LINE_Result>("GET_LINE", lean_AppParameter);
        }
    
        public virtual ObjectResult<string> GET_LOCALIZATION_VKBINPUT(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_LOCALIZATION_VKBINPUT", lean_AppParameter);
        }
    
        public virtual ObjectResult<string> GET_MATERIAL_VKB_Detail_PartNumber_PROD_PRIORITY(string material, string leanApp)
        {
            var materialParameter = material != null ?
                new ObjectParameter("Material", material) :
                new ObjectParameter("Material", typeof(string));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_MATERIAL_VKB_Detail_PartNumber_PROD_PRIORITY", materialParameter, leanAppParameter);
        }
    
        public virtual ObjectResult<GET_Overproduce_Special_Permission_Result> GET_Overproduce_Special_Permission(string lean_App, string filter)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_Overproduce_Special_Permission_Result>("GET_Overproduce_Special_Permission", lean_AppParameter, filterParameter);
        }
    
        public virtual ObjectResult<GET_PARTNO_WEEKSDEMAND_DISTRIBUTIONEXCEP_Result> GET_PARTNO_WEEKSDEMAND_DISTRIBUTIONEXCEP(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PARTNO_WEEKSDEMAND_DISTRIBUTIONEXCEP_Result>("GET_PARTNO_WEEKSDEMAND_DISTRIBUTIONEXCEP", lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_PARTNO_WEEKSDEMAND_DISTRIBUTIONNETWORK_Result> GET_PARTNO_WEEKSDEMAND_DISTRIBUTIONNETWORK(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PARTNO_WEEKSDEMAND_DISTRIBUTIONNETWORK_Result>("GET_PARTNO_WEEKSDEMAND_DISTRIBUTIONNETWORK", lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_PRODUCTION_PRIORITIZE_Result> GET_PRODUCTION_PRIORITIZE(Nullable<System.DateTime> date, Nullable<int> idLine, string lean_App)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_PRODUCTION_PRIORITIZE_Result>("GET_PRODUCTION_PRIORITIZE", dateParameter, idLineParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_REPORT_DETAILS_Result> GET_REPORT_DETAILS(string lean_App, string geo)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var geoParameter = geo != null ?
                new ObjectParameter("Geo", geo) :
                new ObjectParameter("Geo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_REPORT_DETAILS_Result>("GET_REPORT_DETAILS", lean_AppParameter, geoParameter);
        }
    
        public virtual ObjectResult<GET_SPLIT_LINE_Result> GET_SPLIT_LINE(Nullable<int> idLine, Nullable<System.DateTime> date, string lean_App)
        {
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SPLIT_LINE_Result>("GET_SPLIT_LINE", idLineParameter, dateParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_SPLIT_MATERIAL_Result> GET_SPLIT_MATERIAL(Nullable<int> idLine, Nullable<System.DateTime> date, string lean_App)
        {
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SPLIT_MATERIAL_Result>("GET_SPLIT_MATERIAL", idLineParameter, dateParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_SPLITS_Result> GET_SPLITS(Nullable<int> idLine, Nullable<System.DateTime> date, string idMaterial, string lean_App)
        {
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SPLITS_Result>("GET_SPLITS", idLineParameter, dateParameter, idMaterialParameter, lean_AppParameter);
        }
    
        public virtual int GET_USER_SITES(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_USER_SITES", userNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GET_VIRTUALKANBAN_CAPABILITYFROMLINE(string ddlLinetxt, string lean_App)
        {
            var ddlLinetxtParameter = ddlLinetxt != null ?
                new ObjectParameter("ddlLinetxt", ddlLinetxt) :
                new ObjectParameter("ddlLinetxt", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_VIRTUALKANBAN_CAPABILITYFROMLINE", ddlLinetxtParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<string> GET_VIRTUALKANBAN_CHECK_UPLOAD_DATA(string lean_App, Nullable<System.DateTime> date)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_VIRTUALKANBAN_CHECK_UPLOAD_DATA", lean_AppParameter, dateParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_DIST_EXCEP_Result> GET_VIRTUALKANBAN_DIST_EXCEP(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_DIST_EXCEP_Result>("GET_VIRTUALKANBAN_DIST_EXCEP", lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_DIST_NETWORK_Result> GET_VIRTUALKANBAN_DIST_NETWORK(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_DIST_NETWORK_Result>("GET_VIRTUALKANBAN_DIST_NETWORK", lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_FILLDATASET_Result> GET_VIRTUALKANBAN_FILLDATASET(string ddlLinetxt, string txtFilter, string lean_App)
        {
            var ddlLinetxtParameter = ddlLinetxt != null ?
                new ObjectParameter("ddlLinetxt", ddlLinetxt) :
                new ObjectParameter("ddlLinetxt", typeof(string));
    
            var txtFilterParameter = txtFilter != null ?
                new ObjectParameter("txtFilter", txtFilter) :
                new ObjectParameter("txtFilter", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_FILLDATASET_Result>("GET_VIRTUALKANBAN_FILLDATASET", ddlLinetxtParameter, txtFilterParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GET_VIRTUALKANBAN_IDLINE(string ddlLinetxt, string leanApp)
        {
            var ddlLinetxtParameter = ddlLinetxt != null ?
                new ObjectParameter("ddlLinetxt", ddlLinetxt) :
                new ObjectParameter("ddlLinetxt", typeof(string));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_VIRTUALKANBAN_IDLINE", ddlLinetxtParameter, leanAppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_IFNOT_FINALVERSION_Result> GET_VIRTUALKANBAN_IFNOT_FINALVERSION(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_IFNOT_FINALVERSION_Result>("GET_VIRTUALKANBAN_IFNOT_FINALVERSION", lean_AppParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GET_VIRTUALKANBAN_ISCHECKED(string userName, string leanApp)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GET_VIRTUALKANBAN_ISCHECKED", userNameParameter, leanAppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_LINE_Result> GET_VIRTUALKANBAN_LINE(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_LINE_Result>("GET_VIRTUALKANBAN_LINE", lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_PALLETSIZES_Result> GET_VIRTUALKANBAN_PALLETSIZES(string ddlLinetxt, Nullable<System.DateTime> txtFechaCaptura, string leanApp)
        {
            var ddlLinetxtParameter = ddlLinetxt != null ?
                new ObjectParameter("ddlLinetxt", ddlLinetxt) :
                new ObjectParameter("ddlLinetxt", typeof(string));
    
            var txtFechaCapturaParameter = txtFechaCaptura.HasValue ?
                new ObjectParameter("txtFechaCaptura", txtFechaCaptura) :
                new ObjectParameter("txtFechaCaptura", typeof(System.DateTime));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_PALLETSIZES_Result>("GET_VIRTUALKANBAN_PALLETSIZES", ddlLinetxtParameter, txtFechaCapturaParameter, leanAppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_PROD_PRIORITIES_Result> GET_VIRTUALKANBAN_PROD_PRIORITIES(Nullable<System.DateTime> txtFechaCaptura, string leanApp)
        {
            var txtFechaCapturaParameter = txtFechaCaptura.HasValue ?
                new ObjectParameter("txtFechaCaptura", txtFechaCaptura) :
                new ObjectParameter("txtFechaCaptura", typeof(System.DateTime));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_PROD_PRIORITIES_Result>("GET_VIRTUALKANBAN_PROD_PRIORITIES", txtFechaCapturaParameter, leanAppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_SPECIALPERMISSION_Result> GET_VIRTUALKANBAN_SPECIALPERMISSION(string leanApp)
        {
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_SPECIALPERMISSION_Result>("GET_VIRTUALKANBAN_SPECIALPERMISSION", leanAppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_VKB_DETAIL_PARTNO_Result> GET_VIRTUALKANBAN_VKB_DETAIL_PARTNO(Nullable<int> idVKB, string leanApp)
        {
            var idVKBParameter = idVKB.HasValue ?
                new ObjectParameter("idVKB", idVKB) :
                new ObjectParameter("idVKB", typeof(int));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_VKB_DETAIL_PARTNO_Result>("GET_VIRTUALKANBAN_VKB_DETAIL_PARTNO", idVKBParameter, leanAppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_VKBDETAIL_PN_CHK_FALSE_Result> GET_VIRTUALKANBAN_VKBDETAIL_PN_CHK_FALSE(Nullable<System.DateTime> date, string ddlLinetxt, string lean_App)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var ddlLinetxtParameter = ddlLinetxt != null ?
                new ObjectParameter("ddlLinetxt", ddlLinetxt) :
                new ObjectParameter("ddlLinetxt", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_VKBDETAIL_PN_CHK_FALSE_Result>("GET_VIRTUALKANBAN_VKBDETAIL_PN_CHK_FALSE", dateParameter, ddlLinetxtParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_VKBDETAIL_PN_CHK_TRUE_Result> GET_VIRTUALKANBAN_VKBDETAIL_PN_CHK_TRUE(Nullable<System.DateTime> date, string ddlLinetxt, string lean_App)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var ddlLinetxtParameter = ddlLinetxt != null ?
                new ObjectParameter("ddlLinetxt", ddlLinetxt) :
                new ObjectParameter("ddlLinetxt", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_VKBDETAIL_PN_CHK_TRUE_Result>("GET_VIRTUALKANBAN_VKBDETAIL_PN_CHK_TRUE", dateParameter, ddlLinetxtParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_VKBGLOBAL_Result> GET_VIRTUALKANBAN_VKBGLOBAL(Nullable<System.DateTime> date, string ddlLineText, string leanApp)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var ddlLineTextParameter = ddlLineText != null ?
                new ObjectParameter("ddlLineText", ddlLineText) :
                new ObjectParameter("ddlLineText", typeof(string));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_VKBGLOBAL_Result>("GET_VIRTUALKANBAN_VKBGLOBAL", dateParameter, ddlLineTextParameter, leanAppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_VKBGLOBALLINE_Result> GET_VIRTUALKANBAN_VKBGLOBALLINE(Nullable<System.DateTime> txtFechaCaptura, string ddlLinetxt, string leanApp)
        {
            var txtFechaCapturaParameter = txtFechaCaptura.HasValue ?
                new ObjectParameter("txtFechaCaptura", txtFechaCaptura) :
                new ObjectParameter("txtFechaCaptura", typeof(System.DateTime));
    
            var ddlLinetxtParameter = ddlLinetxt != null ?
                new ObjectParameter("ddlLinetxt", ddlLinetxt) :
                new ObjectParameter("ddlLinetxt", typeof(string));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_VKBGLOBALLINE_Result>("GET_VIRTUALKANBAN_VKBGLOBALLINE", txtFechaCapturaParameter, ddlLinetxtParameter, leanAppParameter);
        }
    
        public virtual ObjectResult<GET_VKB_CHECKLIST_Result> GET_VKB_CHECKLIST(Nullable<System.DateTime> date, string lean_App)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VKB_CHECKLIST_Result>("GET_VKB_CHECKLIST", dateParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_VKB_DETAILS_Result> GET_VKB_DETAILS(string lean_Application, string line, Nullable<System.DateTime> date, string filter)
        {
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VKB_DETAILS_Result>("GET_VKB_DETAILS", lean_ApplicationParameter, lineParameter, dateParameter, filterParameter);
        }
    
        public virtual ObjectResult<GET_VKB_Global_Line_Result> GET_VKB_Global_Line(string lean_App, Nullable<System.DateTime> date)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VKB_Global_Line_Result>("GET_VKB_Global_Line", lean_AppParameter, dateParameter);
        }
    
        public virtual ObjectResult<GET_VKB_GLOBAL_LINE_FOR_PROD_PRIORITY_Result> GET_VKB_GLOBAL_LINE_FOR_PROD_PRIORITY(Nullable<System.DateTime> date, string lean_App)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VKB_GLOBAL_LINE_FOR_PROD_PRIORITY_Result>("GET_VKB_GLOBAL_LINE_FOR_PROD_PRIORITY", dateParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GET_VKBINPUT_INSERTLINE(string line, string lean_App)
        {
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_VKBINPUT_INSERTLINE", lineParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_VKBINPUT_LINE_Result> GET_VKBINPUT_LINE(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VKBINPUT_LINE_Result>("GET_VKBINPUT_LINE", lean_AppParameter);
        }
    
        public virtual int GRANT_USER_ACCESS_TO_USERSITE(string userName, Nullable<int> idSite)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var idSiteParameter = idSite.HasValue ?
                new ObjectParameter("idSite", idSite) :
                new ObjectParameter("idSite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GRANT_USER_ACCESS_TO_USERSITE", userNameParameter, idSiteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IDLINE(string line, string leanApp)
        {
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IDLINE", lineParameter, leanAppParameter);
        }
    
        public virtual int INSERT_DEMAND_BACKORDER(string idLocalizationMaterial, string idLocalization, string idMaterial, string sales_Doc, string item, string sLNo, Nullable<System.DateTime> mat_Date, string doc_Ca, Nullable<int> quantity, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var sales_DocParameter = sales_Doc != null ?
                new ObjectParameter("sales_Doc", sales_Doc) :
                new ObjectParameter("sales_Doc", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            var sLNoParameter = sLNo != null ?
                new ObjectParameter("SLNo", sLNo) :
                new ObjectParameter("SLNo", typeof(string));
    
            var mat_DateParameter = mat_Date.HasValue ?
                new ObjectParameter("Mat_Date", mat_Date) :
                new ObjectParameter("Mat_Date", typeof(System.DateTime));
    
            var doc_CaParameter = doc_Ca != null ?
                new ObjectParameter("Doc_Ca", doc_Ca) :
                new ObjectParameter("Doc_Ca", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_DEMAND_BACKORDER", idLocalizationMaterialParameter, idLocalizationParameter, idMaterialParameter, sales_DocParameter, itemParameter, sLNoParameter, mat_DateParameter, doc_CaParameter, quantityParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_DEMAND_CUSTOMER_BACKORDER(string idLocalizationMaterial, string idLocalization, string idMaterial, string sales_Doc, string item, string sLNo, Nullable<System.DateTime> mat_Date, string doc_Ca, Nullable<int> quantity, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var sales_DocParameter = sales_Doc != null ?
                new ObjectParameter("sales_Doc", sales_Doc) :
                new ObjectParameter("sales_Doc", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            var sLNoParameter = sLNo != null ?
                new ObjectParameter("SLNo", sLNo) :
                new ObjectParameter("SLNo", typeof(string));
    
            var mat_DateParameter = mat_Date.HasValue ?
                new ObjectParameter("Mat_Date", mat_Date) :
                new ObjectParameter("Mat_Date", typeof(System.DateTime));
    
            var doc_CaParameter = doc_Ca != null ?
                new ObjectParameter("Doc_Ca", doc_Ca) :
                new ObjectParameter("Doc_Ca", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_DEMAND_CUSTOMER_BACKORDER", idLocalizationMaterialParameter, idLocalizationParameter, idMaterialParameter, sales_DocParameter, itemParameter, sLNoParameter, mat_DateParameter, doc_CaParameter, quantityParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_DEMAND_SWE(string idLocalizationMaterial, string idLocalization, string idMaterial, string sales_Doc, string item, string sLNo, Nullable<System.DateTime> mat_Date, string doc_Ca, Nullable<int> quantity, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var sales_DocParameter = sales_Doc != null ?
                new ObjectParameter("sales_Doc", sales_Doc) :
                new ObjectParameter("sales_Doc", typeof(string));
    
            var itemParameter = item != null ?
                new ObjectParameter("item", item) :
                new ObjectParameter("item", typeof(string));
    
            var sLNoParameter = sLNo != null ?
                new ObjectParameter("SLNo", sLNo) :
                new ObjectParameter("SLNo", typeof(string));
    
            var mat_DateParameter = mat_Date.HasValue ?
                new ObjectParameter("Mat_Date", mat_Date) :
                new ObjectParameter("Mat_Date", typeof(System.DateTime));
    
            var doc_CaParameter = doc_Ca != null ?
                new ObjectParameter("Doc_Ca", doc_Ca) :
                new ObjectParameter("Doc_Ca", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_DEMAND_SWE", idLocalizationMaterialParameter, idLocalizationParameter, idMaterialParameter, sales_DocParameter, itemParameter, sLNoParameter, mat_DateParameter, doc_CaParameter, quantityParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_DISTRIBUTION_EXCEP(string idLocalizationMaterial, string idLocalizationMaterial_Excep, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idLocalizationMaterial_ExcepParameter = idLocalizationMaterial_Excep != null ?
                new ObjectParameter("idLocalizationMaterial_Excep", idLocalizationMaterial_Excep) :
                new ObjectParameter("idLocalizationMaterial_Excep", typeof(string));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_DISTRIBUTION_EXCEP", idLocalizationMaterialParameter, idLocalizationMaterial_ExcepParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_DISTRIBUTION_NETWORK(string gEO, string idLocalization_Source, string idLocalization_Dest, Nullable<int> leadTime, string localizationDesc, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var gEOParameter = gEO != null ?
                new ObjectParameter("GEO", gEO) :
                new ObjectParameter("GEO", typeof(string));
    
            var idLocalization_SourceParameter = idLocalization_Source != null ?
                new ObjectParameter("idLocalization_Source", idLocalization_Source) :
                new ObjectParameter("idLocalization_Source", typeof(string));
    
            var idLocalization_DestParameter = idLocalization_Dest != null ?
                new ObjectParameter("idLocalization_Dest", idLocalization_Dest) :
                new ObjectParameter("idLocalization_Dest", typeof(string));
    
            var leadTimeParameter = leadTime.HasValue ?
                new ObjectParameter("LeadTime", leadTime) :
                new ObjectParameter("LeadTime", typeof(int));
    
            var localizationDescParameter = localizationDesc != null ?
                new ObjectParameter("LocalizationDesc", localizationDesc) :
                new ObjectParameter("LocalizationDesc", typeof(string));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_DISTRIBUTION_NETWORK", gEOParameter, idLocalization_SourceParameter, idLocalization_DestParameter, leadTimeParameter, localizationDescParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_INVENTORY_DISTRIBUTION_CENTERS(string idLocalizationMaterial, string idLocalization, string idMaterial, Nullable<int> quantity, string upload_User, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_INVENTORY_DISTRIBUTION_CENTERS", idLocalizationMaterialParameter, idLocalizationParameter, idMaterialParameter, quantityParameter, upload_UserParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_Inventory_DockArea(string idLocalizationMaterial, string idLocalization, string localization_Name, string idMaterial, string pallet_ID, string pallet_No, Nullable<int> quantity, string status, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var localization_NameParameter = localization_Name != null ?
                new ObjectParameter("Localization_Name", localization_Name) :
                new ObjectParameter("Localization_Name", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var pallet_IDParameter = pallet_ID != null ?
                new ObjectParameter("Pallet_ID", pallet_ID) :
                new ObjectParameter("Pallet_ID", typeof(string));
    
            var pallet_NoParameter = pallet_No != null ?
                new ObjectParameter("Pallet_No", pallet_No) :
                new ObjectParameter("Pallet_No", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_Inventory_DockArea", idLocalizationMaterialParameter, idLocalizationParameter, localization_NameParameter, idMaterialParameter, pallet_IDParameter, pallet_NoParameter, quantityParameter, statusParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_INVENTORY_INTRANSIT(string idLocalizationMaterial, string idLocalization, string localization_Name, string idMaterial, string material_Name, Nullable<int> quantity, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var localization_NameParameter = localization_Name != null ?
                new ObjectParameter("Localization_Name", localization_Name) :
                new ObjectParameter("Localization_Name", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var material_NameParameter = material_Name != null ?
                new ObjectParameter("Material_Name", material_Name) :
                new ObjectParameter("Material_Name", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_INVENTORY_INTRANSIT", idLocalizationMaterialParameter, idLocalizationParameter, localization_NameParameter, idMaterialParameter, material_NameParameter, quantityParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_INVENTORY_INTRANSIT_JABIL(string idLocalizationMaterial, string idLocalization, string idMaterial, string bulk, Nullable<int> quantity, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var bulkParameter = bulk != null ?
                new ObjectParameter("Bulk", bulk) :
                new ObjectParameter("Bulk", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_INVENTORY_INTRANSIT_JABIL", idLocalizationMaterialParameter, idLocalizationParameter, idMaterialParameter, bulkParameter, quantityParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_INVENTORY_REBALANCING(string idLocalizationMaterial, string idSource, string idLocalization, string idMaterial, Nullable<int> quantity, string type, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idSourceParameter = idSource != null ?
                new ObjectParameter("idSource", idSource) :
                new ObjectParameter("idSource", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_INVENTORY_REBALANCING", idLocalizationMaterialParameter, idSourceParameter, idLocalizationParameter, idMaterialParameter, quantityParameter, typeParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_IS_CHECKED(string userName, string lean_App)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_IS_CHECKED", userNameParameter, lean_AppParameter);
        }
    
        public virtual int INSERT_PARTNUMBER_WEEKDEMAND(string idLocalizationMaterial, Nullable<int> weekNumber, Nullable<int> year, Nullable<int> demandQty, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var weekNumberParameter = weekNumber.HasValue ?
                new ObjectParameter("weekNumber", weekNumber) :
                new ObjectParameter("weekNumber", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var demandQtyParameter = demandQty.HasValue ?
                new ObjectParameter("DemandQty", demandQty) :
                new ObjectParameter("DemandQty", typeof(int));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_PARTNUMBER_WEEKDEMAND", idLocalizationMaterialParameter, weekNumberParameter, yearParameter, demandQtyParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_VIRTUALKANBAN_PROD_PRIORITIZE(string idLocalizationMaterial, Nullable<int> idLine, Nullable<System.DateTime> date, Nullable<int> production_Order, Nullable<int> pallets, Nullable<double> primaryPriority, string upload_User, Nullable<int> minutes_Lost, Nullable<int> pieces_Lost, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var production_OrderParameter = production_Order.HasValue ?
                new ObjectParameter("Production_Order", production_Order) :
                new ObjectParameter("Production_Order", typeof(int));
    
            var palletsParameter = pallets.HasValue ?
                new ObjectParameter("Pallets", pallets) :
                new ObjectParameter("Pallets", typeof(int));
    
            var primaryPriorityParameter = primaryPriority.HasValue ?
                new ObjectParameter("PrimaryPriority", primaryPriority) :
                new ObjectParameter("PrimaryPriority", typeof(double));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var minutes_LostParameter = minutes_Lost.HasValue ?
                new ObjectParameter("Minutes_Lost", minutes_Lost) :
                new ObjectParameter("Minutes_Lost", typeof(int));
    
            var pieces_LostParameter = pieces_Lost.HasValue ?
                new ObjectParameter("Pieces_Lost", pieces_Lost) :
                new ObjectParameter("Pieces_Lost", typeof(int));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_VIRTUALKANBAN_PROD_PRIORITIZE", idLocalizationMaterialParameter, idLineParameter, dateParameter, production_OrderParameter, palletsParameter, primaryPriorityParameter, upload_UserParameter, minutes_LostParameter, pieces_LostParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_VIRTUALKANBAN_SIGNALDELAY(Nullable<int> idVKB, string idLocalizationMaterial, string material_Type_Request, string user_Upload, Nullable<System.DateTime> creation_Date, string leanApp)
        {
            var idVKBParameter = idVKB.HasValue ?
                new ObjectParameter("idVKB", idVKB) :
                new ObjectParameter("idVKB", typeof(int));
    
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var material_Type_RequestParameter = material_Type_Request != null ?
                new ObjectParameter("Material_Type_Request", material_Type_Request) :
                new ObjectParameter("Material_Type_Request", typeof(string));
    
            var user_UploadParameter = user_Upload != null ?
                new ObjectParameter("User_Upload", user_Upload) :
                new ObjectParameter("User_Upload", typeof(string));
    
            var creation_DateParameter = creation_Date.HasValue ?
                new ObjectParameter("Creation_Date", creation_Date) :
                new ObjectParameter("Creation_Date", typeof(System.DateTime));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_VIRTUALKANBAN_SIGNALDELAY", idVKBParameter, idLocalizationMaterialParameter, material_Type_RequestParameter, user_UploadParameter, creation_DateParameter, leanAppParameter);
        }
    
        public virtual int INSERT_VIRTUALKANBAN_VKBDETAILPARTNO(Nullable<int> idVKB, string idLocalizationMaterial, string uDC, Nullable<double> cV, Nullable<double> primaryPriority, string idMaterial, string localization_Name, Nullable<double> percentRed, Nullable<double> customer_Backorder_Units, Nullable<double> bTO_Units, Nullable<double> special_Bids_Units, Nullable<double> projected_Backorder_Units, Nullable<double> invOnDisCenter_Units, Nullable<double> invInTransit_Units, Nullable<double> sAPKanbanTotal_Pallets, Nullable<double> heijunkaKanban_Pallets, Nullable<double> totalKanban_Pallets, Nullable<double> totalInvpercent, Nullable<double> redPorc, Nullable<double> yellowPorc, Nullable<double> greenPorc, Nullable<double> kanbanNeededForCustomerBO_Pallets, Nullable<double> kanbanNeededForBTO_Pallets, Nullable<double> kanbanNeededForSpecialBid_Pallets, Nullable<double> kanbanNeededForProjectedBO_Pallets, Nullable<double> kanbanNeededForOrange_Pallets, Nullable<double> kanbanNeededForRed_Pallets, Nullable<double> kanbanNeededForYellow_Pallets, Nullable<double> kanbanNeededForGreen_Pallets, Nullable<double> minKanban_Pallets, Nullable<double> targetKanban_Pallets, Nullable<double> maxKanban_Pallets, Nullable<double> excessKanban_Pallets, Nullable<double> heijunkaBoard_Pallets, string platform, string family, Nullable<double> averageDemand, Nullable<int> pallet_Qty, string type, Nullable<double> high_Priority_Units, Nullable<int> remd_Pallet, string lean_Application, string pPVT, string yield)
        {
            var idVKBParameter = idVKB.HasValue ?
                new ObjectParameter("idVKB", idVKB) :
                new ObjectParameter("idVKB", typeof(int));
    
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var uDCParameter = uDC != null ?
                new ObjectParameter("UDC", uDC) :
                new ObjectParameter("UDC", typeof(string));
    
            var cVParameter = cV.HasValue ?
                new ObjectParameter("CV", cV) :
                new ObjectParameter("CV", typeof(double));
    
            var primaryPriorityParameter = primaryPriority.HasValue ?
                new ObjectParameter("PrimaryPriority", primaryPriority) :
                new ObjectParameter("PrimaryPriority", typeof(double));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var localization_NameParameter = localization_Name != null ?
                new ObjectParameter("Localization_Name", localization_Name) :
                new ObjectParameter("Localization_Name", typeof(string));
    
            var percentRedParameter = percentRed.HasValue ?
                new ObjectParameter("PercentRed", percentRed) :
                new ObjectParameter("PercentRed", typeof(double));
    
            var customer_Backorder_UnitsParameter = customer_Backorder_Units.HasValue ?
                new ObjectParameter("Customer_Backorder_Units", customer_Backorder_Units) :
                new ObjectParameter("Customer_Backorder_Units", typeof(double));
    
            var bTO_UnitsParameter = bTO_Units.HasValue ?
                new ObjectParameter("BTO_Units", bTO_Units) :
                new ObjectParameter("BTO_Units", typeof(double));
    
            var special_Bids_UnitsParameter = special_Bids_Units.HasValue ?
                new ObjectParameter("Special_Bids_Units", special_Bids_Units) :
                new ObjectParameter("Special_Bids_Units", typeof(double));
    
            var projected_Backorder_UnitsParameter = projected_Backorder_Units.HasValue ?
                new ObjectParameter("Projected_Backorder_Units", projected_Backorder_Units) :
                new ObjectParameter("Projected_Backorder_Units", typeof(double));
    
            var invOnDisCenter_UnitsParameter = invOnDisCenter_Units.HasValue ?
                new ObjectParameter("InvOnDisCenter_Units", invOnDisCenter_Units) :
                new ObjectParameter("InvOnDisCenter_Units", typeof(double));
    
            var invInTransit_UnitsParameter = invInTransit_Units.HasValue ?
                new ObjectParameter("InvInTransit_Units", invInTransit_Units) :
                new ObjectParameter("InvInTransit_Units", typeof(double));
    
            var sAPKanbanTotal_PalletsParameter = sAPKanbanTotal_Pallets.HasValue ?
                new ObjectParameter("SAPKanbanTotal_Pallets", sAPKanbanTotal_Pallets) :
                new ObjectParameter("SAPKanbanTotal_Pallets", typeof(double));
    
            var heijunkaKanban_PalletsParameter = heijunkaKanban_Pallets.HasValue ?
                new ObjectParameter("HeijunkaKanban_Pallets", heijunkaKanban_Pallets) :
                new ObjectParameter("HeijunkaKanban_Pallets", typeof(double));
    
            var totalKanban_PalletsParameter = totalKanban_Pallets.HasValue ?
                new ObjectParameter("TotalKanban_Pallets", totalKanban_Pallets) :
                new ObjectParameter("TotalKanban_Pallets", typeof(double));
    
            var totalInvpercentParameter = totalInvpercent.HasValue ?
                new ObjectParameter("TotalInvpercent", totalInvpercent) :
                new ObjectParameter("TotalInvpercent", typeof(double));
    
            var redPorcParameter = redPorc.HasValue ?
                new ObjectParameter("RedPorc", redPorc) :
                new ObjectParameter("RedPorc", typeof(double));
    
            var yellowPorcParameter = yellowPorc.HasValue ?
                new ObjectParameter("YellowPorc", yellowPorc) :
                new ObjectParameter("YellowPorc", typeof(double));
    
            var greenPorcParameter = greenPorc.HasValue ?
                new ObjectParameter("GreenPorc", greenPorc) :
                new ObjectParameter("GreenPorc", typeof(double));
    
            var kanbanNeededForCustomerBO_PalletsParameter = kanbanNeededForCustomerBO_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForCustomerBO_Pallets", kanbanNeededForCustomerBO_Pallets) :
                new ObjectParameter("KanbanNeededForCustomerBO_Pallets", typeof(double));
    
            var kanbanNeededForBTO_PalletsParameter = kanbanNeededForBTO_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForBTO_Pallets", kanbanNeededForBTO_Pallets) :
                new ObjectParameter("KanbanNeededForBTO_Pallets", typeof(double));
    
            var kanbanNeededForSpecialBid_PalletsParameter = kanbanNeededForSpecialBid_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForSpecialBid_Pallets", kanbanNeededForSpecialBid_Pallets) :
                new ObjectParameter("KanbanNeededForSpecialBid_Pallets", typeof(double));
    
            var kanbanNeededForProjectedBO_PalletsParameter = kanbanNeededForProjectedBO_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForProjectedBO_Pallets", kanbanNeededForProjectedBO_Pallets) :
                new ObjectParameter("KanbanNeededForProjectedBO_Pallets", typeof(double));
    
            var kanbanNeededForOrange_PalletsParameter = kanbanNeededForOrange_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForOrange_Pallets", kanbanNeededForOrange_Pallets) :
                new ObjectParameter("KanbanNeededForOrange_Pallets", typeof(double));
    
            var kanbanNeededForRed_PalletsParameter = kanbanNeededForRed_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForRed_Pallets", kanbanNeededForRed_Pallets) :
                new ObjectParameter("KanbanNeededForRed_Pallets", typeof(double));
    
            var kanbanNeededForYellow_PalletsParameter = kanbanNeededForYellow_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForYellow_Pallets", kanbanNeededForYellow_Pallets) :
                new ObjectParameter("KanbanNeededForYellow_Pallets", typeof(double));
    
            var kanbanNeededForGreen_PalletsParameter = kanbanNeededForGreen_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForGreen_Pallets", kanbanNeededForGreen_Pallets) :
                new ObjectParameter("KanbanNeededForGreen_Pallets", typeof(double));
    
            var minKanban_PalletsParameter = minKanban_Pallets.HasValue ?
                new ObjectParameter("MinKanban_Pallets", minKanban_Pallets) :
                new ObjectParameter("MinKanban_Pallets", typeof(double));
    
            var targetKanban_PalletsParameter = targetKanban_Pallets.HasValue ?
                new ObjectParameter("TargetKanban_Pallets", targetKanban_Pallets) :
                new ObjectParameter("TargetKanban_Pallets", typeof(double));
    
            var maxKanban_PalletsParameter = maxKanban_Pallets.HasValue ?
                new ObjectParameter("MaxKanban_Pallets", maxKanban_Pallets) :
                new ObjectParameter("MaxKanban_Pallets", typeof(double));
    
            var excessKanban_PalletsParameter = excessKanban_Pallets.HasValue ?
                new ObjectParameter("ExcessKanban_Pallets", excessKanban_Pallets) :
                new ObjectParameter("ExcessKanban_Pallets", typeof(double));
    
            var heijunkaBoard_PalletsParameter = heijunkaBoard_Pallets.HasValue ?
                new ObjectParameter("HeijunkaBoard_Pallets", heijunkaBoard_Pallets) :
                new ObjectParameter("HeijunkaBoard_Pallets", typeof(double));
    
            var platformParameter = platform != null ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(string));
    
            var familyParameter = family != null ?
                new ObjectParameter("Family", family) :
                new ObjectParameter("Family", typeof(string));
    
            var averageDemandParameter = averageDemand.HasValue ?
                new ObjectParameter("AverageDemand", averageDemand) :
                new ObjectParameter("AverageDemand", typeof(double));
    
            var pallet_QtyParameter = pallet_Qty.HasValue ?
                new ObjectParameter("Pallet_Qty", pallet_Qty) :
                new ObjectParameter("Pallet_Qty", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var high_Priority_UnitsParameter = high_Priority_Units.HasValue ?
                new ObjectParameter("High_Priority_Units", high_Priority_Units) :
                new ObjectParameter("High_Priority_Units", typeof(double));
    
            var remd_PalletParameter = remd_Pallet.HasValue ?
                new ObjectParameter("Remd_Pallet", remd_Pallet) :
                new ObjectParameter("Remd_Pallet", typeof(int));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            var pPVTParameter = pPVT != null ?
                new ObjectParameter("PPVT", pPVT) :
                new ObjectParameter("PPVT", typeof(string));
    
            var yieldParameter = yield != null ?
                new ObjectParameter("Yield", yield) :
                new ObjectParameter("Yield", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_VIRTUALKANBAN_VKBDETAILPARTNO", idVKBParameter, idLocalizationMaterialParameter, uDCParameter, cVParameter, primaryPriorityParameter, idMaterialParameter, localization_NameParameter, percentRedParameter, customer_Backorder_UnitsParameter, bTO_UnitsParameter, special_Bids_UnitsParameter, projected_Backorder_UnitsParameter, invOnDisCenter_UnitsParameter, invInTransit_UnitsParameter, sAPKanbanTotal_PalletsParameter, heijunkaKanban_PalletsParameter, totalKanban_PalletsParameter, totalInvpercentParameter, redPorcParameter, yellowPorcParameter, greenPorcParameter, kanbanNeededForCustomerBO_PalletsParameter, kanbanNeededForBTO_PalletsParameter, kanbanNeededForSpecialBid_PalletsParameter, kanbanNeededForProjectedBO_PalletsParameter, kanbanNeededForOrange_PalletsParameter, kanbanNeededForRed_PalletsParameter, kanbanNeededForYellow_PalletsParameter, kanbanNeededForGreen_PalletsParameter, minKanban_PalletsParameter, targetKanban_PalletsParameter, maxKanban_PalletsParameter, excessKanban_PalletsParameter, heijunkaBoard_PalletsParameter, platformParameter, familyParameter, averageDemandParameter, pallet_QtyParameter, typeParameter, high_Priority_UnitsParameter, remd_PalletParameter, lean_ApplicationParameter, pPVTParameter, yieldParameter);
        }
    
        public virtual int INSERT_VIRTUALKANBAN_VKBGLOBALLINE(Nullable<System.DateTime> txtFechaCaptura, Nullable<int> idLine, Nullable<bool> chkFinalVersion, string upload_User, Nullable<System.DateTime> upload_Date, string leanApp)
        {
            var txtFechaCapturaParameter = txtFechaCaptura.HasValue ?
                new ObjectParameter("txtFechaCaptura", txtFechaCaptura) :
                new ObjectParameter("txtFechaCaptura", typeof(System.DateTime));
    
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            var chkFinalVersionParameter = chkFinalVersion.HasValue ?
                new ObjectParameter("chkFinalVersion", chkFinalVersion) :
                new ObjectParameter("chkFinalVersion", typeof(bool));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_VIRTUALKANBAN_VKBGLOBALLINE", txtFechaCapturaParameter, idLineParameter, chkFinalVersionParameter, upload_UserParameter, upload_DateParameter, leanAppParameter);
        }
    
        public virtual int INSERT_VKBINPUT(string idLocalizationMaterial, string idMaterial, Nullable<int> idLine, Nullable<double> averageDemand, Nullable<double> sD, Nullable<double> cV, Nullable<int> max_Pallet, Nullable<int> target_Pallet, Nullable<int> min_Pallet, Nullable<int> pallet_Qty, string pPVT, string yield, string uDC, string localization_Name, string platform, string family, string type_SWE_AM, string upload_User, Nullable<System.DateTime> upload_Date, string brand, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            var averageDemandParameter = averageDemand.HasValue ?
                new ObjectParameter("AverageDemand", averageDemand) :
                new ObjectParameter("AverageDemand", typeof(double));
    
            var sDParameter = sD.HasValue ?
                new ObjectParameter("SD", sD) :
                new ObjectParameter("SD", typeof(double));
    
            var cVParameter = cV.HasValue ?
                new ObjectParameter("CV", cV) :
                new ObjectParameter("CV", typeof(double));
    
            var max_PalletParameter = max_Pallet.HasValue ?
                new ObjectParameter("Max_Pallet", max_Pallet) :
                new ObjectParameter("Max_Pallet", typeof(int));
    
            var target_PalletParameter = target_Pallet.HasValue ?
                new ObjectParameter("Target_Pallet", target_Pallet) :
                new ObjectParameter("Target_Pallet", typeof(int));
    
            var min_PalletParameter = min_Pallet.HasValue ?
                new ObjectParameter("Min_Pallet", min_Pallet) :
                new ObjectParameter("Min_Pallet", typeof(int));
    
            var pallet_QtyParameter = pallet_Qty.HasValue ?
                new ObjectParameter("Pallet_Qty", pallet_Qty) :
                new ObjectParameter("Pallet_Qty", typeof(int));
    
            var pPVTParameter = pPVT != null ?
                new ObjectParameter("PPVT", pPVT) :
                new ObjectParameter("PPVT", typeof(string));
    
            var yieldParameter = yield != null ?
                new ObjectParameter("Yield", yield) :
                new ObjectParameter("Yield", typeof(string));
    
            var uDCParameter = uDC != null ?
                new ObjectParameter("UDC", uDC) :
                new ObjectParameter("UDC", typeof(string));
    
            var localization_NameParameter = localization_Name != null ?
                new ObjectParameter("Localization_Name", localization_Name) :
                new ObjectParameter("Localization_Name", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(string));
    
            var familyParameter = family != null ?
                new ObjectParameter("Family", family) :
                new ObjectParameter("Family", typeof(string));
    
            var type_SWE_AMParameter = type_SWE_AM != null ?
                new ObjectParameter("Type_SWE_AM", type_SWE_AM) :
                new ObjectParameter("Type_SWE_AM", typeof(string));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_VKBINPUT", idLocalizationMaterialParameter, idMaterialParameter, idLineParameter, averageDemandParameter, sDParameter, cVParameter, max_PalletParameter, target_PalletParameter, min_PalletParameter, pallet_QtyParameter, pPVTParameter, yieldParameter, uDCParameter, localization_NameParameter, platformParameter, familyParameter, type_SWE_AMParameter, upload_UserParameter, upload_DateParameter, brandParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_VKBINPUT_LINE(string line, string lean_App)
        {
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_VKBINPUT_LINE", lineParameter, lean_AppParameter);
        }
    
        public virtual int TEST_Line(Nullable<int> lineID)
        {
            var lineIDParameter = lineID.HasValue ?
                new ObjectParameter("LineID", lineID) :
                new ObjectParameter("LineID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TEST_Line", lineIDParameter);
        }
    
        public virtual int Update_BulkAM_Catalog(string bulk, string aM, string idLocalization, string original_Bulk, string original_AM, string original_idLocalization)
        {
            var bulkParameter = bulk != null ?
                new ObjectParameter("Bulk", bulk) :
                new ObjectParameter("Bulk", typeof(string));
    
            var aMParameter = aM != null ?
                new ObjectParameter("AM", aM) :
                new ObjectParameter("AM", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var original_BulkParameter = original_Bulk != null ?
                new ObjectParameter("original_Bulk", original_Bulk) :
                new ObjectParameter("original_Bulk", typeof(string));
    
            var original_AMParameter = original_AM != null ?
                new ObjectParameter("original_AM", original_AM) :
                new ObjectParameter("original_AM", typeof(string));
    
            var original_idLocalizationParameter = original_idLocalization != null ?
                new ObjectParameter("original_idLocalization", original_idLocalization) :
                new ObjectParameter("original_idLocalization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_BulkAM_Catalog", bulkParameter, aMParameter, idLocalizationParameter, original_BulkParameter, original_AMParameter, original_idLocalizationParameter);
        }
    
        public virtual int UPDATE_IS_CHECKED(string user_Name, string lean_App, Nullable<decimal> @checked)
        {
            var user_NameParameter = user_Name != null ?
                new ObjectParameter("User_Name", user_Name) :
                new ObjectParameter("User_Name", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var checkedParameter = @checked.HasValue ?
                new ObjectParameter("Checked", @checked) :
                new ObjectParameter("Checked", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_IS_CHECKED", user_NameParameter, lean_AppParameter, checkedParameter);
        }
    
        public virtual int UPDATE_LHW_TABLES_FROM_HW()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_LHW_TABLES_FROM_HW");
        }
    
        public virtual int UPDATE_LINE(Nullable<int> capability, string planner, Nullable<int> original_idLine, string original_Line)
        {
            var capabilityParameter = capability.HasValue ?
                new ObjectParameter("Capability", capability) :
                new ObjectParameter("Capability", typeof(int));
    
            var plannerParameter = planner != null ?
                new ObjectParameter("Planner", planner) :
                new ObjectParameter("Planner", typeof(string));
    
            var original_idLineParameter = original_idLine.HasValue ?
                new ObjectParameter("original_idLine", original_idLine) :
                new ObjectParameter("original_idLine", typeof(int));
    
            var original_LineParameter = original_Line != null ?
                new ObjectParameter("original_Line", original_Line) :
                new ObjectParameter("original_Line", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_LINE", capabilityParameter, plannerParameter, original_idLineParameter, original_LineParameter);
        }
    
        public virtual int UPDATE_Overproduce_Special_Permission(Nullable<bool> active, string uploadUser, Nullable<int> original_idOverproduce, string lean_App)
        {
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("uploadUser", uploadUser) :
                new ObjectParameter("uploadUser", typeof(string));
    
            var original_idOverproduceParameter = original_idOverproduce.HasValue ?
                new ObjectParameter("original_idOverproduce", original_idOverproduce) :
                new ObjectParameter("original_idOverproduce", typeof(int));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_Overproduce_Special_Permission", activeParameter, uploadUserParameter, original_idOverproduceParameter, lean_AppParameter);
        }
    
        public virtual int UPDATE_Production_Prioritize(Nullable<int> idLine_ddlLine, Nullable<int> idLine_gv_ddlLine, Nullable<System.DateTime> filterDate, string idLocalizationMaterial, string leanApp, Nullable<int> pallets_ddlLine, Nullable<int> pallets_gv_ddlLine, Nullable<int> production_Order, string sAP_Order, Nullable<int> minutes_Lost, Nullable<int> pieces_Lost, string comments, string upload_User)
        {
            var idLine_ddlLineParameter = idLine_ddlLine.HasValue ?
                new ObjectParameter("idLine_ddlLine", idLine_ddlLine) :
                new ObjectParameter("idLine_ddlLine", typeof(int));
    
            var idLine_gv_ddlLineParameter = idLine_gv_ddlLine.HasValue ?
                new ObjectParameter("idLine_gv_ddlLine", idLine_gv_ddlLine) :
                new ObjectParameter("idLine_gv_ddlLine", typeof(int));
    
            var filterDateParameter = filterDate.HasValue ?
                new ObjectParameter("FilterDate", filterDate) :
                new ObjectParameter("FilterDate", typeof(System.DateTime));
    
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            var pallets_ddlLineParameter = pallets_ddlLine.HasValue ?
                new ObjectParameter("Pallets_ddlLine", pallets_ddlLine) :
                new ObjectParameter("Pallets_ddlLine", typeof(int));
    
            var pallets_gv_ddlLineParameter = pallets_gv_ddlLine.HasValue ?
                new ObjectParameter("Pallets_gv_ddlLine", pallets_gv_ddlLine) :
                new ObjectParameter("Pallets_gv_ddlLine", typeof(int));
    
            var production_OrderParameter = production_Order.HasValue ?
                new ObjectParameter("Production_Order", production_Order) :
                new ObjectParameter("Production_Order", typeof(int));
    
            var sAP_OrderParameter = sAP_Order != null ?
                new ObjectParameter("SAP_Order", sAP_Order) :
                new ObjectParameter("SAP_Order", typeof(string));
    
            var minutes_LostParameter = minutes_Lost.HasValue ?
                new ObjectParameter("Minutes_Lost", minutes_Lost) :
                new ObjectParameter("Minutes_Lost", typeof(int));
    
            var pieces_LostParameter = pieces_Lost.HasValue ?
                new ObjectParameter("Pieces_Lost", pieces_Lost) :
                new ObjectParameter("Pieces_Lost", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_Production_Prioritize", idLine_ddlLineParameter, idLine_gv_ddlLineParameter, filterDateParameter, idLocalizationMaterialParameter, leanAppParameter, pallets_ddlLineParameter, pallets_gv_ddlLineParameter, production_OrderParameter, sAP_OrderParameter, minutes_LostParameter, pieces_LostParameter, commentsParameter, upload_UserParameter);
        }
    
        public virtual int UPDATE_SPECIAL_BIDS(string idLocalization, string idMaterial, Nullable<bool> active, Nullable<int> quantity, string uploadUser, string comments, string lean_App, string original_idSpecialBid)
        {
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("uploadUser", uploadUser) :
                new ObjectParameter("uploadUser", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var original_idSpecialBidParameter = original_idSpecialBid != null ?
                new ObjectParameter("original_idSpecialBid", original_idSpecialBid) :
                new ObjectParameter("original_idSpecialBid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_SPECIAL_BIDS", idLocalizationParameter, idMaterialParameter, activeParameter, quantityParameter, uploadUserParameter, commentsParameter, lean_AppParameter, original_idSpecialBidParameter);
        }
    
        public virtual int UPDATE_SPLITS_TO_PROD_PRIORITY(Nullable<int> idLine_ddlLine, Nullable<int> idLine_Destiny, Nullable<System.DateTime> date, string idLocalizationMaterial, Nullable<int> pallets, Nullable<int> split_Pallets, string lean_App, string upload_User)
        {
            var idLine_ddlLineParameter = idLine_ddlLine.HasValue ?
                new ObjectParameter("idLine_ddlLine", idLine_ddlLine) :
                new ObjectParameter("idLine_ddlLine", typeof(int));
    
            var idLine_DestinyParameter = idLine_Destiny.HasValue ?
                new ObjectParameter("idLine_Destiny", idLine_Destiny) :
                new ObjectParameter("idLine_Destiny", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var palletsParameter = pallets.HasValue ?
                new ObjectParameter("Pallets", pallets) :
                new ObjectParameter("Pallets", typeof(int));
    
            var split_PalletsParameter = split_Pallets.HasValue ?
                new ObjectParameter("split_Pallets", split_Pallets) :
                new ObjectParameter("split_Pallets", typeof(int));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_SPLITS_TO_PROD_PRIORITY", idLine_ddlLineParameter, idLine_DestinyParameter, dateParameter, idLocalizationMaterialParameter, palletsParameter, split_PalletsParameter, lean_AppParameter, upload_UserParameter);
        }
    
        public virtual int UPDATE_VIRTUALKANBAN_ISCHECKED(Nullable<decimal> is_Checked, string userName, string leanApp)
        {
            var is_CheckedParameter = is_Checked.HasValue ?
                new ObjectParameter("Is_Checked", is_Checked) :
                new ObjectParameter("Is_Checked", typeof(decimal));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_VIRTUALKANBAN_ISCHECKED", is_CheckedParameter, userNameParameter, leanAppParameter);
        }
    
        public virtual int UPDATE_VIRTUALKANBAN_LINE(Nullable<int> oldTotalCapacity, string ddlLineTxt, string leanApp)
        {
            var oldTotalCapacityParameter = oldTotalCapacity.HasValue ?
                new ObjectParameter("OldTotalCapacity", oldTotalCapacity) :
                new ObjectParameter("OldTotalCapacity", typeof(int));
    
            var ddlLineTxtParameter = ddlLineTxt != null ?
                new ObjectParameter("ddlLineTxt", ddlLineTxt) :
                new ObjectParameter("ddlLineTxt", typeof(string));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_VIRTUALKANBAN_LINE", oldTotalCapacityParameter, ddlLineTxtParameter, leanAppParameter);
        }
    
        public virtual int UPDATE_VIRTUALKANBAN_VKBGLOBALLINE(Nullable<bool> chkFinalVersion, string upload_User, Nullable<System.DateTime> upload_Date, Nullable<int> idVKB)
        {
            var chkFinalVersionParameter = chkFinalVersion.HasValue ?
                new ObjectParameter("chkFinalVersion", chkFinalVersion) :
                new ObjectParameter("chkFinalVersion", typeof(bool));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var idVKBParameter = idVKB.HasValue ?
                new ObjectParameter("idVKB", idVKB) :
                new ObjectParameter("idVKB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_VIRTUALKANBAN_VKBGLOBALLINE", chkFinalVersionParameter, upload_UserParameter, upload_DateParameter, idVKBParameter);
        }
    
        public virtual int Update_VKB_Global_Line(Nullable<bool> final_Version, string uploadUser, Nullable<int> original_idLine, Nullable<System.DateTime> date)
        {
            var final_VersionParameter = final_Version.HasValue ?
                new ObjectParameter("Final_Version", final_Version) :
                new ObjectParameter("Final_Version", typeof(bool));
    
            var uploadUserParameter = uploadUser != null ?
                new ObjectParameter("uploadUser", uploadUser) :
                new ObjectParameter("uploadUser", typeof(string));
    
            var original_idLineParameter = original_idLine.HasValue ?
                new ObjectParameter("original_idLine", original_idLine) :
                new ObjectParameter("original_idLine", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_VKB_Global_Line", final_VersionParameter, uploadUserParameter, original_idLineParameter, dateParameter);
        }
    
        public virtual int REVOKE_USER_ACCESS_FROM_USERSITE(string userName, string siteName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var siteNameParameter = siteName != null ?
                new ObjectParameter("SiteName", siteName) :
                new ObjectParameter("SiteName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REVOKE_USER_ACCESS_FROM_USERSITE", userNameParameter, siteNameParameter);
        }
    
        public virtual int ROLLBACK_ALL_MISMATCH_HW_TABLES_FROM_LHW(string lEAN_APP)
        {
            var lEAN_APPParameter = lEAN_APP != null ?
                new ObjectParameter("LEAN_APP", lEAN_APP) :
                new ObjectParameter("LEAN_APP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ROLLBACK_ALL_MISMATCH_HW_TABLES_FROM_LHW", lEAN_APPParameter);
        }
    
        public virtual ObjectResult<GET_SPECIAL_BIDS_Result> GET_SPECIAL_BIDS(string lean_App, string filter)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SPECIAL_BIDS_Result>("GET_SPECIAL_BIDS", lean_AppParameter, filterParameter);
        }
    
        public virtual ObjectResult<GET_CAPABILITIES_Result> GET_CAPABILITIES(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_CAPABILITIES_Result>("GET_CAPABILITIES", lean_AppParameter);
        }
    
        public virtual int UPDATE_CAPABILITIES(string lean_App, string line, Nullable<int> qty)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_CAPABILITIES", lean_AppParameter, lineParameter, qtyParameter);
        }
    
        public virtual ObjectResult<GET_LEAN_APP_Result> GET_LEAN_APP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_LEAN_APP_Result>("GET_LEAN_APP");
        }
    
        public virtual ObjectResult<GET_USER_SITES1_Result> GET_USER_SITES1(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_USER_SITES1_Result>("GET_USER_SITES1", userNameParameter);
        }
    
        [EdmFunction("CPSEntities", "Split")]
        public virtual IQueryable<string> Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("String", @string) :
                new ObjectParameter("String", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[CPSEntities].[Split](@String, @Delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual int GRANT_USER_ACCESS_TO_USERSITE1(string userName, Nullable<int> idSite)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var idSiteParameter = idSite.HasValue ?
                new ObjectParameter("idSite", idSite) :
                new ObjectParameter("idSite", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GRANT_USER_ACCESS_TO_USERSITE1", userNameParameter, idSiteParameter);
        }
    
        public virtual int CREATE_LINE1(string line, Nullable<int> capability, string planner, string lean_App)
        {
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var capabilityParameter = capability.HasValue ?
                new ObjectParameter("Capability", capability) :
                new ObjectParameter("Capability", typeof(int));
    
            var plannerParameter = planner != null ?
                new ObjectParameter("Planner", planner) :
                new ObjectParameter("Planner", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CREATE_LINE1", lineParameter, capabilityParameter, plannerParameter, lean_AppParameter);
        }
    
        public virtual int DELETE_INVENTORY_REBALANCING1(string lean_app)
        {
            var lean_appParameter = lean_app != null ?
                new ObjectParameter("Lean_app", lean_app) :
                new ObjectParameter("Lean_app", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_INVENTORY_REBALANCING1", lean_appParameter);
        }
    
        public virtual int DELETE_VIRTUALKANBAN_SIGNALDELAY1(Nullable<int> idVKB)
        {
            var idVKBParameter = idVKB.HasValue ?
                new ObjectParameter("idVKB", idVKB) :
                new ObjectParameter("idVKB", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_VIRTUALKANBAN_SIGNALDELAY1", idVKBParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_FILLDATASET1_Result> GET_VIRTUALKANBAN_FILLDATASET1(string ddlLinetxt, string txtFilter, string lean_App)
        {
            var ddlLinetxtParameter = ddlLinetxt != null ?
                new ObjectParameter("ddlLinetxt", ddlLinetxt) :
                new ObjectParameter("ddlLinetxt", typeof(string));
    
            var txtFilterParameter = txtFilter != null ?
                new ObjectParameter("txtFilter", txtFilter) :
                new ObjectParameter("txtFilter", typeof(string));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_FILLDATASET1_Result>("GET_VIRTUALKANBAN_FILLDATASET1", ddlLinetxtParameter, txtFilterParameter, lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_LINE1_Result> GET_VIRTUALKANBAN_LINE1(string lean_App)
        {
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_LINE1_Result>("GET_VIRTUALKANBAN_LINE1", lean_AppParameter);
        }
    
        public virtual ObjectResult<GET_VIRTUALKANBAN_VKB_DETAIL_PARTNO1_Result> GET_VIRTUALKANBAN_VKB_DETAIL_PARTNO1(Nullable<int> idVKB, string leanApp)
        {
            var idVKBParameter = idVKB.HasValue ?
                new ObjectParameter("idVKB", idVKB) :
                new ObjectParameter("idVKB", typeof(int));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VIRTUALKANBAN_VKB_DETAIL_PARTNO1_Result>("GET_VIRTUALKANBAN_VKB_DETAIL_PARTNO1", idVKBParameter, leanAppParameter);
        }
    
        public virtual ObjectResult<GET_VKB_DETAILS1_Result> GET_VKB_DETAILS1(string lean_Application, string line, Nullable<System.DateTime> date, string filter)
        {
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            var lineParameter = line != null ?
                new ObjectParameter("Line", line) :
                new ObjectParameter("Line", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VKB_DETAILS1_Result>("GET_VKB_DETAILS1", lean_ApplicationParameter, lineParameter, dateParameter, filterParameter);
        }
    
        public virtual ObjectResult<GET_VKB_GLOBAL_LINE_FOR_PROD_PRIORITY1_Result> GET_VKB_GLOBAL_LINE_FOR_PROD_PRIORITY1(Nullable<System.DateTime> date, string lean_App)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var lean_AppParameter = lean_App != null ?
                new ObjectParameter("Lean_App", lean_App) :
                new ObjectParameter("Lean_App", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_VKB_GLOBAL_LINE_FOR_PROD_PRIORITY1_Result>("GET_VKB_GLOBAL_LINE_FOR_PROD_PRIORITY1", dateParameter, lean_AppParameter);
        }
    
        public virtual int INSERT_INVENTORY_REBALANCING1(string idLocalizationMaterial, string idSource, string idLocalization, string idMaterial, Nullable<int> quantity, string type, string upload_User, Nullable<System.DateTime> upload_Date, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idSourceParameter = idSource != null ?
                new ObjectParameter("idSource", idSource) :
                new ObjectParameter("idSource", typeof(string));
    
            var idLocalizationParameter = idLocalization != null ?
                new ObjectParameter("idLocalization", idLocalization) :
                new ObjectParameter("idLocalization", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_INVENTORY_REBALANCING1", idLocalizationMaterialParameter, idSourceParameter, idLocalizationParameter, idMaterialParameter, quantityParameter, typeParameter, upload_UserParameter, upload_DateParameter, lean_ApplicationParameter);
        }
    
        public virtual int INSERT_VIRTUALKANBAN_SIGNALDELAY1(Nullable<int> idVKB, string idLocalizationMaterial, string material_Type_Request, string user_Upload, Nullable<System.DateTime> creation_Date, string leanApp)
        {
            var idVKBParameter = idVKB.HasValue ?
                new ObjectParameter("idVKB", idVKB) :
                new ObjectParameter("idVKB", typeof(int));
    
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var material_Type_RequestParameter = material_Type_Request != null ?
                new ObjectParameter("Material_Type_Request", material_Type_Request) :
                new ObjectParameter("Material_Type_Request", typeof(string));
    
            var user_UploadParameter = user_Upload != null ?
                new ObjectParameter("User_Upload", user_Upload) :
                new ObjectParameter("User_Upload", typeof(string));
    
            var creation_DateParameter = creation_Date.HasValue ?
                new ObjectParameter("Creation_Date", creation_Date) :
                new ObjectParameter("Creation_Date", typeof(System.DateTime));
    
            var leanAppParameter = leanApp != null ?
                new ObjectParameter("LeanApp", leanApp) :
                new ObjectParameter("LeanApp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_VIRTUALKANBAN_SIGNALDELAY1", idVKBParameter, idLocalizationMaterialParameter, material_Type_RequestParameter, user_UploadParameter, creation_DateParameter, leanAppParameter);
        }
    
        public virtual int INSERT_VIRTUALKANBAN_VKBDETAILPARTNO1(Nullable<int> idVKB, string idLocalizationMaterial, string uDC, Nullable<double> cV, Nullable<double> primaryPriority, string idMaterial, string localization_Name, Nullable<double> percentRed, Nullable<double> customer_Backorder_Units, Nullable<double> bTO_Units, Nullable<double> special_Bids_Units, Nullable<double> projected_Backorder_Units, Nullable<double> invOnDisCenter_Units, Nullable<double> invInTransit_Units, Nullable<double> sAPKanbanTotal_Pallets, Nullable<double> heijunkaKanban_Pallets, Nullable<double> totalKanban_Pallets, Nullable<double> totalInvpercent, Nullable<double> redPorc, Nullable<double> yellowPorc, Nullable<double> greenPorc, Nullable<double> kanbanNeededForCustomerBO_Pallets, Nullable<double> kanbanNeededForBTO_Pallets, Nullable<double> kanbanNeededForSpecialBid_Pallets, Nullable<double> kanbanNeededForProjectedBO_Pallets, Nullable<double> kanbanNeededForOrange_Pallets, Nullable<double> kanbanNeededForRed_Pallets, Nullable<double> kanbanNeededForYellow_Pallets, Nullable<double> kanbanNeededForGreen_Pallets, Nullable<double> minKanban_Pallets, Nullable<double> targetKanban_Pallets, Nullable<double> maxKanban_Pallets, Nullable<double> excessKanban_Pallets, Nullable<double> heijunkaBoard_Pallets, string platform, string family, Nullable<double> averageDemand, Nullable<int> pallet_Qty, string type, Nullable<double> high_Priority_Units, Nullable<int> remd_Pallet, string lean_Application, string pPVT, string yield)
        {
            var idVKBParameter = idVKB.HasValue ?
                new ObjectParameter("idVKB", idVKB) :
                new ObjectParameter("idVKB", typeof(int));
    
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var uDCParameter = uDC != null ?
                new ObjectParameter("UDC", uDC) :
                new ObjectParameter("UDC", typeof(string));
    
            var cVParameter = cV.HasValue ?
                new ObjectParameter("CV", cV) :
                new ObjectParameter("CV", typeof(double));
    
            var primaryPriorityParameter = primaryPriority.HasValue ?
                new ObjectParameter("PrimaryPriority", primaryPriority) :
                new ObjectParameter("PrimaryPriority", typeof(double));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var localization_NameParameter = localization_Name != null ?
                new ObjectParameter("Localization_Name", localization_Name) :
                new ObjectParameter("Localization_Name", typeof(string));
    
            var percentRedParameter = percentRed.HasValue ?
                new ObjectParameter("PercentRed", percentRed) :
                new ObjectParameter("PercentRed", typeof(double));
    
            var customer_Backorder_UnitsParameter = customer_Backorder_Units.HasValue ?
                new ObjectParameter("Customer_Backorder_Units", customer_Backorder_Units) :
                new ObjectParameter("Customer_Backorder_Units", typeof(double));
    
            var bTO_UnitsParameter = bTO_Units.HasValue ?
                new ObjectParameter("BTO_Units", bTO_Units) :
                new ObjectParameter("BTO_Units", typeof(double));
    
            var special_Bids_UnitsParameter = special_Bids_Units.HasValue ?
                new ObjectParameter("Special_Bids_Units", special_Bids_Units) :
                new ObjectParameter("Special_Bids_Units", typeof(double));
    
            var projected_Backorder_UnitsParameter = projected_Backorder_Units.HasValue ?
                new ObjectParameter("Projected_Backorder_Units", projected_Backorder_Units) :
                new ObjectParameter("Projected_Backorder_Units", typeof(double));
    
            var invOnDisCenter_UnitsParameter = invOnDisCenter_Units.HasValue ?
                new ObjectParameter("InvOnDisCenter_Units", invOnDisCenter_Units) :
                new ObjectParameter("InvOnDisCenter_Units", typeof(double));
    
            var invInTransit_UnitsParameter = invInTransit_Units.HasValue ?
                new ObjectParameter("InvInTransit_Units", invInTransit_Units) :
                new ObjectParameter("InvInTransit_Units", typeof(double));
    
            var sAPKanbanTotal_PalletsParameter = sAPKanbanTotal_Pallets.HasValue ?
                new ObjectParameter("SAPKanbanTotal_Pallets", sAPKanbanTotal_Pallets) :
                new ObjectParameter("SAPKanbanTotal_Pallets", typeof(double));
    
            var heijunkaKanban_PalletsParameter = heijunkaKanban_Pallets.HasValue ?
                new ObjectParameter("HeijunkaKanban_Pallets", heijunkaKanban_Pallets) :
                new ObjectParameter("HeijunkaKanban_Pallets", typeof(double));
    
            var totalKanban_PalletsParameter = totalKanban_Pallets.HasValue ?
                new ObjectParameter("TotalKanban_Pallets", totalKanban_Pallets) :
                new ObjectParameter("TotalKanban_Pallets", typeof(double));
    
            var totalInvpercentParameter = totalInvpercent.HasValue ?
                new ObjectParameter("TotalInvpercent", totalInvpercent) :
                new ObjectParameter("TotalInvpercent", typeof(double));
    
            var redPorcParameter = redPorc.HasValue ?
                new ObjectParameter("RedPorc", redPorc) :
                new ObjectParameter("RedPorc", typeof(double));
    
            var yellowPorcParameter = yellowPorc.HasValue ?
                new ObjectParameter("YellowPorc", yellowPorc) :
                new ObjectParameter("YellowPorc", typeof(double));
    
            var greenPorcParameter = greenPorc.HasValue ?
                new ObjectParameter("GreenPorc", greenPorc) :
                new ObjectParameter("GreenPorc", typeof(double));
    
            var kanbanNeededForCustomerBO_PalletsParameter = kanbanNeededForCustomerBO_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForCustomerBO_Pallets", kanbanNeededForCustomerBO_Pallets) :
                new ObjectParameter("KanbanNeededForCustomerBO_Pallets", typeof(double));
    
            var kanbanNeededForBTO_PalletsParameter = kanbanNeededForBTO_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForBTO_Pallets", kanbanNeededForBTO_Pallets) :
                new ObjectParameter("KanbanNeededForBTO_Pallets", typeof(double));
    
            var kanbanNeededForSpecialBid_PalletsParameter = kanbanNeededForSpecialBid_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForSpecialBid_Pallets", kanbanNeededForSpecialBid_Pallets) :
                new ObjectParameter("KanbanNeededForSpecialBid_Pallets", typeof(double));
    
            var kanbanNeededForProjectedBO_PalletsParameter = kanbanNeededForProjectedBO_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForProjectedBO_Pallets", kanbanNeededForProjectedBO_Pallets) :
                new ObjectParameter("KanbanNeededForProjectedBO_Pallets", typeof(double));
    
            var kanbanNeededForOrange_PalletsParameter = kanbanNeededForOrange_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForOrange_Pallets", kanbanNeededForOrange_Pallets) :
                new ObjectParameter("KanbanNeededForOrange_Pallets", typeof(double));
    
            var kanbanNeededForRed_PalletsParameter = kanbanNeededForRed_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForRed_Pallets", kanbanNeededForRed_Pallets) :
                new ObjectParameter("KanbanNeededForRed_Pallets", typeof(double));
    
            var kanbanNeededForYellow_PalletsParameter = kanbanNeededForYellow_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForYellow_Pallets", kanbanNeededForYellow_Pallets) :
                new ObjectParameter("KanbanNeededForYellow_Pallets", typeof(double));
    
            var kanbanNeededForGreen_PalletsParameter = kanbanNeededForGreen_Pallets.HasValue ?
                new ObjectParameter("KanbanNeededForGreen_Pallets", kanbanNeededForGreen_Pallets) :
                new ObjectParameter("KanbanNeededForGreen_Pallets", typeof(double));
    
            var minKanban_PalletsParameter = minKanban_Pallets.HasValue ?
                new ObjectParameter("MinKanban_Pallets", minKanban_Pallets) :
                new ObjectParameter("MinKanban_Pallets", typeof(double));
    
            var targetKanban_PalletsParameter = targetKanban_Pallets.HasValue ?
                new ObjectParameter("TargetKanban_Pallets", targetKanban_Pallets) :
                new ObjectParameter("TargetKanban_Pallets", typeof(double));
    
            var maxKanban_PalletsParameter = maxKanban_Pallets.HasValue ?
                new ObjectParameter("MaxKanban_Pallets", maxKanban_Pallets) :
                new ObjectParameter("MaxKanban_Pallets", typeof(double));
    
            var excessKanban_PalletsParameter = excessKanban_Pallets.HasValue ?
                new ObjectParameter("ExcessKanban_Pallets", excessKanban_Pallets) :
                new ObjectParameter("ExcessKanban_Pallets", typeof(double));
    
            var heijunkaBoard_PalletsParameter = heijunkaBoard_Pallets.HasValue ?
                new ObjectParameter("HeijunkaBoard_Pallets", heijunkaBoard_Pallets) :
                new ObjectParameter("HeijunkaBoard_Pallets", typeof(double));
    
            var platformParameter = platform != null ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(string));
    
            var familyParameter = family != null ?
                new ObjectParameter("Family", family) :
                new ObjectParameter("Family", typeof(string));
    
            var averageDemandParameter = averageDemand.HasValue ?
                new ObjectParameter("AverageDemand", averageDemand) :
                new ObjectParameter("AverageDemand", typeof(double));
    
            var pallet_QtyParameter = pallet_Qty.HasValue ?
                new ObjectParameter("Pallet_Qty", pallet_Qty) :
                new ObjectParameter("Pallet_Qty", typeof(int));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var high_Priority_UnitsParameter = high_Priority_Units.HasValue ?
                new ObjectParameter("High_Priority_Units", high_Priority_Units) :
                new ObjectParameter("High_Priority_Units", typeof(double));
    
            var remd_PalletParameter = remd_Pallet.HasValue ?
                new ObjectParameter("Remd_Pallet", remd_Pallet) :
                new ObjectParameter("Remd_Pallet", typeof(int));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            var pPVTParameter = pPVT != null ?
                new ObjectParameter("PPVT", pPVT) :
                new ObjectParameter("PPVT", typeof(string));
    
            var yieldParameter = yield != null ?
                new ObjectParameter("Yield", yield) :
                new ObjectParameter("Yield", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_VIRTUALKANBAN_VKBDETAILPARTNO1", idVKBParameter, idLocalizationMaterialParameter, uDCParameter, cVParameter, primaryPriorityParameter, idMaterialParameter, localization_NameParameter, percentRedParameter, customer_Backorder_UnitsParameter, bTO_UnitsParameter, special_Bids_UnitsParameter, projected_Backorder_UnitsParameter, invOnDisCenter_UnitsParameter, invInTransit_UnitsParameter, sAPKanbanTotal_PalletsParameter, heijunkaKanban_PalletsParameter, totalKanban_PalletsParameter, totalInvpercentParameter, redPorcParameter, yellowPorcParameter, greenPorcParameter, kanbanNeededForCustomerBO_PalletsParameter, kanbanNeededForBTO_PalletsParameter, kanbanNeededForSpecialBid_PalletsParameter, kanbanNeededForProjectedBO_PalletsParameter, kanbanNeededForOrange_PalletsParameter, kanbanNeededForRed_PalletsParameter, kanbanNeededForYellow_PalletsParameter, kanbanNeededForGreen_PalletsParameter, minKanban_PalletsParameter, targetKanban_PalletsParameter, maxKanban_PalletsParameter, excessKanban_PalletsParameter, heijunkaBoard_PalletsParameter, platformParameter, familyParameter, averageDemandParameter, pallet_QtyParameter, typeParameter, high_Priority_UnitsParameter, remd_PalletParameter, lean_ApplicationParameter, pPVTParameter, yieldParameter);
        }
    
        public virtual int INSERT_VKBINPUT1(string idLocalizationMaterial, string idMaterial, Nullable<int> idLine, Nullable<double> averageDemand, Nullable<double> sD, Nullable<double> cV, Nullable<int> max_Pallet, Nullable<int> target_Pallet, Nullable<int> min_Pallet, Nullable<int> pallet_Qty, string pPVT, string yield, string uDC, string localization_Name, string platform, string family, string type_SWE_AM, string upload_User, Nullable<System.DateTime> upload_Date, string brand, string lean_Application)
        {
            var idLocalizationMaterialParameter = idLocalizationMaterial != null ?
                new ObjectParameter("idLocalizationMaterial", idLocalizationMaterial) :
                new ObjectParameter("idLocalizationMaterial", typeof(string));
    
            var idMaterialParameter = idMaterial != null ?
                new ObjectParameter("idMaterial", idMaterial) :
                new ObjectParameter("idMaterial", typeof(string));
    
            var idLineParameter = idLine.HasValue ?
                new ObjectParameter("idLine", idLine) :
                new ObjectParameter("idLine", typeof(int));
    
            var averageDemandParameter = averageDemand.HasValue ?
                new ObjectParameter("AverageDemand", averageDemand) :
                new ObjectParameter("AverageDemand", typeof(double));
    
            var sDParameter = sD.HasValue ?
                new ObjectParameter("SD", sD) :
                new ObjectParameter("SD", typeof(double));
    
            var cVParameter = cV.HasValue ?
                new ObjectParameter("CV", cV) :
                new ObjectParameter("CV", typeof(double));
    
            var max_PalletParameter = max_Pallet.HasValue ?
                new ObjectParameter("Max_Pallet", max_Pallet) :
                new ObjectParameter("Max_Pallet", typeof(int));
    
            var target_PalletParameter = target_Pallet.HasValue ?
                new ObjectParameter("Target_Pallet", target_Pallet) :
                new ObjectParameter("Target_Pallet", typeof(int));
    
            var min_PalletParameter = min_Pallet.HasValue ?
                new ObjectParameter("Min_Pallet", min_Pallet) :
                new ObjectParameter("Min_Pallet", typeof(int));
    
            var pallet_QtyParameter = pallet_Qty.HasValue ?
                new ObjectParameter("Pallet_Qty", pallet_Qty) :
                new ObjectParameter("Pallet_Qty", typeof(int));
    
            var pPVTParameter = pPVT != null ?
                new ObjectParameter("PPVT", pPVT) :
                new ObjectParameter("PPVT", typeof(string));
    
            var yieldParameter = yield != null ?
                new ObjectParameter("Yield", yield) :
                new ObjectParameter("Yield", typeof(string));
    
            var uDCParameter = uDC != null ?
                new ObjectParameter("UDC", uDC) :
                new ObjectParameter("UDC", typeof(string));
    
            var localization_NameParameter = localization_Name != null ?
                new ObjectParameter("Localization_Name", localization_Name) :
                new ObjectParameter("Localization_Name", typeof(string));
    
            var platformParameter = platform != null ?
                new ObjectParameter("Platform", platform) :
                new ObjectParameter("Platform", typeof(string));
    
            var familyParameter = family != null ?
                new ObjectParameter("Family", family) :
                new ObjectParameter("Family", typeof(string));
    
            var type_SWE_AMParameter = type_SWE_AM != null ?
                new ObjectParameter("Type_SWE_AM", type_SWE_AM) :
                new ObjectParameter("Type_SWE_AM", typeof(string));
    
            var upload_UserParameter = upload_User != null ?
                new ObjectParameter("Upload_User", upload_User) :
                new ObjectParameter("Upload_User", typeof(string));
    
            var upload_DateParameter = upload_Date.HasValue ?
                new ObjectParameter("Upload_Date", upload_Date) :
                new ObjectParameter("Upload_Date", typeof(System.DateTime));
    
            var brandParameter = brand != null ?
                new ObjectParameter("Brand", brand) :
                new ObjectParameter("Brand", typeof(string));
    
            var lean_ApplicationParameter = lean_Application != null ?
                new ObjectParameter("Lean_Application", lean_Application) :
                new ObjectParameter("Lean_Application", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_VKBINPUT1", idLocalizationMaterialParameter, idMaterialParameter, idLineParameter, averageDemandParameter, sDParameter, cVParameter, max_PalletParameter, target_PalletParameter, min_PalletParameter, pallet_QtyParameter, pPVTParameter, yieldParameter, uDCParameter, localization_NameParameter, platformParameter, familyParameter, type_SWE_AMParameter, upload_UserParameter, upload_DateParameter, brandParameter, lean_ApplicationParameter);
        }
    
        public virtual int REVOKE_USER_ACCESS_FROM_USERSITE1(string userName, string siteName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var siteNameParameter = siteName != null ?
                new ObjectParameter("SiteName", siteName) :
                new ObjectParameter("SiteName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REVOKE_USER_ACCESS_FROM_USERSITE1", userNameParameter, siteNameParameter);
        }
    
        public virtual int UPDATE_LHW_TABLES_FROM_HW1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_LHW_TABLES_FROM_HW1");
        }

        public virtual int UPDATE_LINE1(Nullable<int> capability, string planner, Nullable<int> original_idLine, string original_Line)
        {
            var capabilityParameter = capability.HasValue ?
                new ObjectParameter("Capability", capability) :
                new ObjectParameter("Capability", typeof(int));

            var plannerParameter = planner != null ?
                new ObjectParameter("Planner", planner) :
                new ObjectParameter("Planner", typeof(string));

            var original_idLineParameter = original_idLine.HasValue ?
                new ObjectParameter("original_idLine", original_idLine) :
                new ObjectParameter("original_idLine", typeof(int));

            var original_LineParameter = original_Line != null ?
                new ObjectParameter("original_Line", original_Line) :
                new ObjectParameter("original_Line", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_LINE1", capabilityParameter, plannerParameter, original_idLineParameter, original_LineParameter);
        }
    }
}
